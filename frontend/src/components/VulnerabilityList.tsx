import React, { useState } from 'react';

interface Vulnerability {
    title: string;
    severity: string;
    cwe_id?: string;
    description: string;
    file_path: string;
    line_number: number;
    confidence: number;
}

interface VulnerabilityListProps {
    vulnerabilities: Vulnerability[];
}

const VulnerabilityList: React.FC<VulnerabilityListProps> = ({ vulnerabilities }) => {
    const [selectedSeverity, setSelectedSeverity] = useState<string>('all');
    const [searchTerm, setSearchTerm] = useState('');
    const [expandedVuln, setExpandedVuln] = useState<number | null>(null);

    const getSeverityColor = (severity: string) => {
        switch (severity.toLowerCase()) {
            case 'critical':
                return 'text-red-600 bg-red-100 border-red-200';
            case 'high':
                return 'text-orange-600 bg-orange-100 border-orange-200';
            case 'medium':
                return 'text-yellow-600 bg-yellow-100 border-yellow-200';
            case 'low':
                return 'text-green-600 bg-green-100 border-green-200';
            default:
                return 'text-gray-600 bg-gray-100 border-gray-200';
        }
    };

    const getSeverityIcon = (severity: string) => {
        switch (severity.toLowerCase()) {
            case 'critical':
                return '🔴';
            case 'high':
                return '🟠';
            case 'medium':
                return '🟡';
            case 'low':
                return '🟢';
            default:
                return '⚪';
        }
    };

    const getConfidenceLevel = (confidence: number) => {
        if (confidence >= 0.8) return { label: '高', color: 'text-green-600' };
        if (confidence >= 0.6) return { label: '中', color: 'text-yellow-600' };
        return { label: '低', color: 'text-red-600' };
    };

    const filteredVulnerabilities = vulnerabilities.filter(vuln => {
        const matchesSeverity = selectedSeverity === 'all' || vuln.severity.toLowerCase() === selectedSeverity;
        const matchesSearch = searchTerm === '' ||
            vuln.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
            vuln.file_path.toLowerCase().includes(searchTerm.toLowerCase()) ||
            vuln.description.toLowerCase().includes(searchTerm.toLowerCase());

        return matchesSeverity && matchesSearch;
    });

    const severityCounts = vulnerabilities.reduce((acc, vuln) => {
        const severity = vuln.severity.toLowerCase();
        acc[severity] = (acc[severity] || 0) + 1;
        return acc;
    }, {} as Record<string, number>);

    return (
        <div className="space-y-6">
            {/* 过滤器 */}
            <div className="bg-white p-6 rounded-lg shadow border">
                <div className="flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0">
                    {/* 搜索框 */}
                    <div className="flex-1 max-w-md">
                        <div className="relative">
                            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                            </div>
                            <input
                                type="text"
                                placeholder="搜索漏洞..."
                                value={searchTerm}
                                onChange={(e) => setSearchTerm(e.target.value)}
                                className="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"
                            />
                        </div>
                    </div>

                    {/* 严重性过滤器 */}
                    <div className="flex items-center space-x-2">
                        <span className="text-sm font-medium text-gray-700">严重性:</span>
                        <select
                            value={selectedSeverity}
                            onChange={(e) => setSelectedSeverity(e.target.value)}
                            className="border border-gray-300 rounded-md py-1 px-3 text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"
                        >
                            <option value="all">全部 ({vulnerabilities.length})</option>
                            <option value="critical">严重 ({severityCounts.critical || 0})</option>
                            <option value="high">高危 ({severityCounts.high || 0})</option>
                            <option value="medium">中危 ({severityCounts.medium || 0})</option>
                            <option value="low">低危 ({severityCounts.low || 0})</option>
                        </select>
                    </div>
                </div>
            </div>

            {/* 漏洞列表 */}
            <div className="space-y-4">
                {filteredVulnerabilities.length === 0 ? (
                    <div className="bg-white p-8 rounded-lg shadow border text-center">
                        <svg className="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <h3 className="mt-4 text-lg font-medium text-gray-900">未找到匹配的漏洞</h3>
                        <p className="mt-2 text-gray-500">尝试调整搜索条件或过滤器</p>
                    </div>
                ) : (
                    filteredVulnerabilities.map((vuln, index) => {
                        const isExpanded = expandedVuln === index;
                        const confidenceInfo = getConfidenceLevel(vuln.confidence);

                        return (
                            <div key={index} className="bg-white rounded-lg shadow border overflow-hidden">
                                <div
                                    className="p-6 cursor-pointer hover:bg-gray-50 transition-colors"
                                    onClick={() => setExpandedVuln(isExpanded ? null : index)}
                                >
                                    <div className="flex items-start justify-between">
                                        <div className="flex-1 min-w-0">
                                            <div className="flex items-center space-x-3 mb-2">
                                                <span className="text-lg">{getSeverityIcon(vuln.severity)}</span>
                                                <h3 className="text-lg font-semibold text-gray-900 truncate">
                                                    {vuln.title}
                                                </h3>
                                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${getSeverityColor(vuln.severity)}`}>
                                                    {vuln.severity.toUpperCase()}
                                                </span>
                                                {vuln.cwe_id && (
                                                    <span className="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-800">
                                                        {vuln.cwe_id}
                                                    </span>
                                                )}
                                            </div>

                                            <div className="flex items-center space-x-4 text-sm text-gray-500 mb-2">
                                                <span className="flex items-center">
                                                    <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                                    </svg>
                                                    {vuln.file_path}
                                                </span>
                                                <span className="flex items-center">
                                                    <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14" />
                                                    </svg>
                                                    第 {vuln.line_number} 行
                                                </span>
                                                <span className={`flex items-center ${confidenceInfo.color}`}>
                                                    <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                    </svg>
                                                    置信度: {confidenceInfo.label} ({Math.round(vuln.confidence * 100)}%)
                                                </span>
                                            </div>

                                            <p className="text-gray-700 line-clamp-2">
                                                {vuln.description}
                                            </p>
                                        </div>

                                        <div className="ml-4 flex-shrink-0">
                                            <svg
                                                className={`w-5 h-5 text-gray-400 transition-transform ${isExpanded ? 'rotate-180' : ''}`}
                                                fill="none"
                                                stroke="currentColor"
                                                viewBox="0 0 24 24"
                                            >
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                                            </svg>
                                        </div>
                                    </div>
                                </div>

                                {/* 展开的详细信息 */}
                                {isExpanded && (
                                    <div className="border-t border-gray-200 p-6 bg-gray-50">
                                        <div className="space-y-4">
                                            <div>
                                                <h4 className="text-sm font-semibold text-gray-900 mb-2">详细描述</h4>
                                                <p className="text-gray-700 text-sm leading-relaxed">{vuln.description}</p>
                                            </div>

                                            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                                <div>
                                                    <h4 className="text-sm font-semibold text-gray-900 mb-2">文件位置</h4>
                                                    <div className="bg-white p-3 rounded border font-mono text-sm">
                                                        <div className="text-gray-600">文件: {vuln.file_path}</div>
                                                        <div className="text-gray-600">行号: {vuln.line_number}</div>
                                                    </div>
                                                </div>

                                                <div>
                                                    <h4 className="text-sm font-semibold text-gray-900 mb-2">漏洞信息</h4>
                                                    <div className="bg-white p-3 rounded border text-sm space-y-1">
                                                        <div className="flex justify-between">
                                                            <span className="text-gray-600">严重性:</span>
                                                            <span className={`font-medium ${vuln.severity.toLowerCase() === 'critical' ? 'text-red-600' :
                                                                    vuln.severity.toLowerCase() === 'high' ? 'text-orange-600' :
                                                                        vuln.severity.toLowerCase() === 'medium' ? 'text-yellow-600' : 'text-green-600'
                                                                }`}>
                                                                {vuln.severity.toUpperCase()}
                                                            </span>
                                                        </div>
                                                        {vuln.cwe_id && (
                                                            <div className="flex justify-between">
                                                                <span className="text-gray-600">CWE ID:</span>
                                                                <span className="font-medium">{vuln.cwe_id}</span>
                                                            </div>
                                                        )}
                                                        <div className="flex justify-between">
                                                            <span className="text-gray-600">置信度:</span>
                                                            <span className={`font-medium ${confidenceInfo.color}`}>
                                                                {Math.round(vuln.confidence * 100)}%
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                )}
                            </div>
                        );
                    })
                )}
            </div>

            {/* 统计信息 */}
            {filteredVulnerabilities.length > 0 && (
                <div className="bg-white p-4 rounded-lg shadow border">
                    <div className="flex items-center justify-between text-sm text-gray-600">
                        <span>显示 {filteredVulnerabilities.length} / {vulnerabilities.length} 个漏洞</span>
                        <span>
                            {searchTerm && `搜索: "${searchTerm}"`}
                            {selectedSeverity !== 'all' && ` • 严重性: ${selectedSeverity}`}
                        </span>
                    </div>
                </div>
            )}
        </div>
    );
};

export default VulnerabilityList;
